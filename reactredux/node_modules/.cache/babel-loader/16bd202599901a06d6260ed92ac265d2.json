{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\ReactTutorial\\\\reacttutorial\\\\src\\\\components\\\\Burger\\\\Burger.js\";\nimport React from 'react';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient.js';\nimport classes from './Burger.module.css';\n\nconst Burger = props => {\n  let transformedIngredients = [];\n\n  for (const ing in props.ingredients) {\n    if (props.ingredients[ing] !== 0) {\n      for (let i = 0; i < props.ingredients[ing]; i++) {\n        transformedIngredients.push(ing);\n      }\n    }\n  }\n\n  transformedIngredients.map(ing => {\n    return /*#__PURE__*/React.createElement(BurgerIngredient, {\n      key: ing,\n      type: ing,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 16\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.Burger,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BurgerIngredient, {\n    type: \"bread-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }), transformedIngredients, /*#__PURE__*/React.createElement(BurgerIngredient, {\n    type: \"bread-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Burger;","map":{"version":3,"sources":["C:/Users/Admin/Documents/ReactTutorial/reacttutorial/src/components/Burger/Burger.js"],"names":["React","BurgerIngredient","classes","Burger","props","transformedIngredients","ing","ingredients","i","push","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,wCAA7B;AACA,OAAOC,OAAP,MAAoB,qBAApB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACtB,MAAIC,sBAAsB,GAAG,EAA7B;;AACA,OAAK,MAAMC,GAAX,IAAkBF,KAAK,CAACG,WAAxB,EAAoC;AAChC,QAAIH,KAAK,CAACG,WAAN,CAAkBD,GAAlB,MAA2B,CAA/B,EAAiC;AAC7B,WAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,KAAK,CAACG,WAAN,CAAkBD,GAAlB,CAApB,EAA4CE,CAAC,EAA7C,EAAgD;AAC5CH,QAAAA,sBAAsB,CAACI,IAAvB,CAA4BH,GAA5B;AACH;AACJ;AACJ;;AACDD,EAAAA,sBAAsB,CAACK,GAAvB,CAA2BJ,GAAG,IAAI;AAC9B,wBAAO,oBAAC,gBAAD;AAAkB,MAAA,GAAG,EAAEA,GAAvB;AAA4B,MAAA,IAAI,EAAEA,GAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFD;AAIA,sBACI;AAAK,IAAA,SAAS,EAAIJ,OAAO,CAACC,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKE,sBAFL,eAGI,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAC,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAOH,CApBD;;AAsBA,eAAeF,MAAf","sourcesContent":["import React from 'react';\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient.js'\r\nimport classes from './Burger.module.css'\r\n\r\nconst Burger = (props) => {\r\n    let transformedIngredients = []\r\n    for (const ing in props.ingredients){\r\n        if (props.ingredients[ing] !== 0){\r\n            for (let i = 0; i < props.ingredients[ing]; i++){\r\n                transformedIngredients.push(ing)\r\n            }\r\n        }\r\n    }\r\n    transformedIngredients.map(ing => {\r\n        return <BurgerIngredient key={ing} type={ing}/>\r\n    })\r\n    \r\n    return (\r\n        <div className = {classes.Burger}>\r\n            <BurgerIngredient type=\"bread-top\" />   \r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Burger"]},"metadata":{},"sourceType":"module"}