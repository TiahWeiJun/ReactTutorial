{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\ReactTutorial\\\\reacttutorial\\\\src\\\\components\\\\containers\\\\BurgerBuilder\\\\BurgerBuilder.js\";\nimport React from 'react';\nimport Burger from '../../Burger/Burger.js';\nimport BuildControl from '../../Burger/BuildControl/BuildControl.js';\nimport Modal from '../../UI/Modal/Modal.js';\nimport OrderSummary from '../../Burger/OrderSummary/OrderSummary.js';\nimport axios from '../../../axios-orders';\nimport Spinner from '../../UI/Spinner/Spinner.js';\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 4,\n      purchasable: false,\n      showModal: false,\n      loading: false\n    };\n\n    this.checkOutHandler = () => {\n      this.setState({\n        showModal: true\n      });\n    };\n\n    this.cancelModal = () => {\n      this.setState({\n        showModal: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      this.setState({\n        loading: true\n      });\n      const order = {\n        ingredients: this.state.ingredients,\n        price: this.state.totalPrice.toFixed(2),\n        customer: {\n          name: \"Wei Jun\",\n          address: {\n            street: '21',\n            blk: '18'\n          },\n          email: 'test.gmail.com'\n        },\n        deliveryMethod: \"fastest\"\n      };\n      axios.post('/orders.json', order).then(response => {\n        this.setState({\n          loading: false\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.updatePurchaseState = ingredients => {\n      const sum = Object.keys(ingredients).map(igKey => {\n        return ingredients[igKey];\n      }).reduce((sum, next) => {\n        return sum + next;\n      }, 0);\n      this.setState({\n        purchasable: sum > 0\n      });\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n      let updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        ingredients: updatedIngredients,\n        totalPrice: newPrice\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount > 0) {\n        const updatedCount = oldCount - 1;\n        let updatedIngredients = { ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCount;\n        const priceAddition = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice - priceAddition;\n        this.setState({\n          ingredients: updatedIngredients,\n          totalPrice: newPrice\n        });\n        this.updatePurchaseState(updatedIngredients);\n      }\n    };\n  }\n\n  render() {\n    let orderSummary = /*#__PURE__*/React.createElement(OrderSummary, {\n      cancel: this.cancelModal,\n      continue: this.purchaseContinueHandler,\n      price: this.state.totalPrice,\n      ingredients: this.state.ingredients,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    });\n\n    if (this.state.loading) {\n      orderSummary = /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 28\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      showModal: this.state.showModal,\n      clickBackDrop: this.cancelModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }, orderSummary), /*#__PURE__*/React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(BuildControl, {\n      price: this.state.totalPrice,\n      ingredientAdded: this.addIngredientHandler,\n      ingredientRemoved: this.removeIngredientHandler,\n      purchase: this.state.purchasable,\n      checkOut: this.checkOutHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["C:/Users/Admin/Documents/ReactTutorial/reacttutorial/src/components/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Burger","BuildControl","Modal","OrderSummary","axios","Spinner","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","Component","state","ingredients","totalPrice","purchasable","showModal","loading","checkOutHandler","setState","cancelModal","purchaseContinueHandler","order","price","toFixed","customer","name","address","street","blk","email","deliveryMethod","post","then","response","catch","error","console","log","updatePurchaseState","sum","Object","keys","map","igKey","reduce","next","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","oldPrice","newPrice","removeIngredientHandler","render","orderSummary"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Burger from '../../Burger/Burger.js'\r\nimport BuildControl from '../../Burger/BuildControl/BuildControl.js'\r\nimport Modal from '../../UI/Modal/Modal.js'\r\nimport OrderSummary from '../../Burger/OrderSummary/OrderSummary.js'\r\nimport axios from '../../../axios-orders'\r\nimport Spinner from '../../UI/Spinner/Spinner.js'\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n}\r\n\r\nclass BurgerBuilder extends React.Component{\r\n    state = {\r\n        ingredients: {\r\n            salad: 0,\r\n            bacon: 0,\r\n            cheese: 0,\r\n            meat: 0,\r\n        },\r\n        totalPrice: 4,\r\n        purchasable: false,\r\n        showModal: false,\r\n        loading: false\r\n    }\r\n\r\n    checkOutHandler = () => {\r\n        this.setState({\r\n            showModal: true\r\n        })\r\n            \r\n    }\r\n\r\n    cancelModal = () => {\r\n        this.setState({\r\n            showModal: false\r\n        })\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        this.setState({loading: true})\r\n        const order = {\r\n            ingredients: this.state.ingredients,\r\n            price: this.state.totalPrice.toFixed(2),\r\n            customer: {\r\n                name: \"Wei Jun\",\r\n                address: {\r\n                    street: '21',\r\n                    blk: '18'\r\n                },\r\n                email: 'test.gmail.com'\r\n            },\r\n            deliveryMethod: \"fastest\"\r\n        }\r\n        axios.post('/orders.json', order).then(response => {\r\n            this.setState({loading: false})\r\n        }).catch(error => {\r\n            console.log(error)\r\n        })\r\n\r\n    }\r\n\r\n    updatePurchaseState = (ingredients) => {\r\n        const sum = Object.keys(ingredients).map(igKey => {\r\n            return ingredients[igKey]\r\n        }).reduce((sum, next) => {\r\n            return sum + next}, 0)\r\n        \r\n        this.setState({\r\n            purchasable: sum > 0\r\n        })\r\n    }\r\n\r\n    addIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type]\r\n        const updatedCount = oldCount + 1\r\n        let updatedIngredients = {\r\n            ...this.state.ingredients\r\n        }\r\n        updatedIngredients[type] = updatedCount\r\n\r\n        const priceAddition = INGREDIENT_PRICES[type]\r\n        const oldPrice = this.state.totalPrice\r\n        const newPrice = oldPrice + priceAddition\r\n\r\n        this.setState({\r\n            ingredients: updatedIngredients,\r\n            totalPrice: newPrice\r\n        })\r\n        this.updatePurchaseState(updatedIngredients)\r\n    }\r\n    \r\n    removeIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type]\r\n        if (oldCount > 0){\r\n            const updatedCount = oldCount - 1\r\n            let updatedIngredients = {\r\n                ...this.state.ingredients\r\n            }\r\n            updatedIngredients[type] = updatedCount\r\n\r\n            const priceAddition = INGREDIENT_PRICES[type]\r\n            const oldPrice = this.state.totalPrice\r\n            const newPrice = oldPrice - priceAddition\r\n            this.setState({\r\n                ingredients: updatedIngredients,\r\n                totalPrice: newPrice\r\n            })\r\n            this.updatePurchaseState(updatedIngredients)\r\n\r\n        }\r\n        \r\n\r\n    }\r\n\r\n    render() {\r\n        let orderSummary = (\r\n            <OrderSummary cancel = {this.cancelModal}\r\n                          continue = {this.purchaseContinueHandler}\r\n                          price = {this.state.totalPrice}  \r\n                          ingredients = {this.state.ingredients}/>\r\n        )\r\n        if (this.state.loading){\r\n            orderSummary = <Spinner />\r\n        }\r\n        return(\r\n            <React.Fragment>\r\n                <Modal showModal = {this.state.showModal}\r\n                        clickBackDrop = {this.cancelModal}>\r\n                   {orderSummary}\r\n                </Modal>\r\n                <Burger ingredients = {this.state.ingredients}/>\r\n                <BuildControl \r\n                    price = {this.state.totalPrice} \r\n                    ingredientAdded={this.addIngredientHandler} \r\n                    ingredientRemoved={this.removeIngredientHandler}\r\n                    purchase = {this.state.purchasable}\r\n                    checkOut = {this.checkOutHandler}/>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nexport default BurgerBuilder"]},"metadata":{},"sourceType":"module"}