{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\ReactTutorial\\\\reacttutorial\\\\src\\\\components\\\\containers\\\\Checkout\\\\ContactData\\\\ContactData.js\";\nimport React from 'react';\nimport Button from '../../../UI/Button/Button.js';\nimport classes from './ContactData.module.css';\nimport axios from '../../../../axios-orders.js';\nimport { withRouter } from 'react-router-dom';\nimport Input from '../../../UI/Input/Input.js';\n\nclass ContactData extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      orderForm: {\n        name: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Your Name'\n          },\n          value: ''\n        },\n        email: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'email',\n            placeholder: 'Your Email'\n          },\n          value: ''\n        },\n        street: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'ZipCode'\n          },\n          value: ''\n        },\n        zipCode: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Your Street'\n          },\n          value: ''\n        },\n        country: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Country'\n          },\n          value: ''\n        },\n        deliveryMethod: {\n          elementType: 'select',\n          elementConfig: {\n            options: [{\n              value: 'fastest',\n              displayValue: 'Fastest'\n            }, {\n              value: 'cheapest',\n              displayValue: 'Cheapest'\n            }]\n          },\n          value: ''\n        }\n      },\n      loading: false\n    };\n\n    this.orderHandler = () => {\n      this.setState({\n        loading: true\n      });\n      const order = {\n        ingredients: this.props.ingredients,\n        price: this.props.price,\n        customer: {\n          name: this.state.name,\n          address: {\n            street: this.state.address.street,\n            postalCode: this.state.address.postalCode\n          },\n          email: this.state.email\n        },\n        deliveryMethod: \"fastest\"\n      };\n      axios.post('/orders.json', order).then(response => {\n        this.setState({\n          loading: false\n        });\n        this.props.history.replace('/');\n      }).catch(error => {\n        this.setState({\n          loading: false\n        });\n      });\n    };\n\n    this.inputChangedHandler = (event, inputIdentifier) => {\n      const updatedOrderForm = { ...this.state.orderForm\n      };\n      const updatedFormElement = { ...updatedOrderForm[inputIdentifier]\n      };\n      updatedFormElement.value = event.target.value;\n      updatedOrderForm[inputIdentifier] = updatedFormElement;\n      this.setState({\n        orderForm: updatedOrderForm\n      });\n    };\n  }\n\n  render() {\n    const formElementsArray = [];\n\n    for (let key in this.state.orderForm) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.orderForm[key]\n      });\n    }\n\n    let form = /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, formElementsArray.map(formElement => {\n      return /*#__PURE__*/React.createElement(Input, {\n        elementType: formElement.config.elementType,\n        elementConfig: formElement.config.elementConfig,\n        value: formElement.config.value,\n        key: formElement.id,\n        changed: event => this.inputChangedHandler(event, formElement.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 29\n        }\n      });\n    }), /*#__PURE__*/React.createElement(Button, {\n      btnType: \"Success\",\n      clicked: this.orderHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, \"Order now\"));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.ContactData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, \"Enter your Contact Data\"), form);\n  }\n\n}\n\nexport default withRouter(ContactData);","map":{"version":3,"sources":["C:/Users/Admin/Documents/ReactTutorial/reacttutorial/src/components/containers/Checkout/ContactData/ContactData.js"],"names":["React","Button","classes","axios","withRouter","Input","ContactData","Component","state","orderForm","name","elementType","elementConfig","type","placeholder","value","email","street","zipCode","country","deliveryMethod","options","displayValue","loading","orderHandler","setState","order","ingredients","props","price","customer","address","postalCode","post","then","response","history","replace","catch","error","inputChangedHandler","event","inputIdentifier","updatedOrderForm","updatedFormElement","target","render","formElementsArray","key","push","id","config","form","map","formElement"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Button from '../../../UI/Button/Button.js'\r\nimport classes from './ContactData.module.css'\r\nimport axios from '../../../../axios-orders.js'\r\nimport {withRouter} from 'react-router-dom'\r\nimport Input from '../../../UI/Input/Input.js'\r\n\r\nclass ContactData extends React.Component{\r\n    state = {\r\n        orderForm: {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Name'\r\n                },\r\n                value: ''\r\n            },\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Your Email'\r\n                },\r\n                value: ''\r\n            },\r\n            street: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'ZipCode'\r\n                },\r\n                value: ''\r\n            },\r\n            zipCode: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Street'\r\n                },\r\n                value: ''\r\n            },\r\n            country: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Country'\r\n                },\r\n                value: ''\r\n            },\r\n            deliveryMethod: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [{value: 'fastest', displayValue: 'Fastest'},\r\n                              {value: 'cheapest', displayValue: 'Cheapest'} ]\r\n                    \r\n                },\r\n                value: ''\r\n            }\r\n        },\r\n        \r\n        loading: false\r\n    }\r\n\r\n    orderHandler = () =>{\r\n        this.setState({loading: true})\r\n        const order = {\r\n            ingredients: this.props.ingredients,\r\n            price: this.props.price,\r\n            customer: {\r\n                name: this.state.name,\r\n                address: {\r\n                    street: this.state.address.street,\r\n                    postalCode: this.state.address.postalCode\r\n                },\r\n                email: this.state.email\r\n            },\r\n            deliveryMethod: \"fastest\"\r\n        }\r\n        axios.post('/orders.json', order).then(response => {\r\n            this.setState({loading: false})\r\n            this.props.history.replace('/')\r\n        }).catch(error => {\r\n            this.setState({loading: false})\r\n        })\r\n        \r\n    }\r\n\r\n    inputChangedHandler = (event, inputIdentifier) => {\r\n        const updatedOrderForm = {...this.state.orderForm}\r\n        const updatedFormElement = {...updatedOrderForm[inputIdentifier]}\r\n        updatedFormElement.value = event.target.value\r\n        updatedOrderForm[inputIdentifier] = updatedFormElement\r\n        this.setState({\r\n            orderForm: updatedOrderForm\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const formElementsArray = []\r\n        for (let key in this.state.orderForm){\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key]\r\n            })\r\n        }\r\n\r\n        let form = (\r\n            <form>\r\n                {formElementsArray.map(formElement => {\r\n                    return (<Input elementType = {formElement.config.elementType} \r\n                                   elementConfig = {formElement.config.elementConfig}\r\n                                   value = {formElement.config.value}\r\n                                   key = {formElement.id}\r\n                                   changed = {(event) => this.inputChangedHandler(event, formElement.id)}/>)\r\n                })}\r\n                <Button btnType=\"Success\" clicked = {this.orderHandler}>Order now</Button>\r\n            </form>\r\n        )\r\n        return(\r\n            <div className = {classes.ContactData}>\r\n                <h4>Enter your Contact Data</h4>\r\n                {form}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(ContactData)"]},"metadata":{},"sourceType":"module"}