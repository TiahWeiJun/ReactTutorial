{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\ReactTutorial\\\\reacttutorial\\\\src\\\\components\\\\containers\\\\BurgerBuilder\\\\BurgerBuilder.js\";\nimport React from 'react';\nimport Burger from '../../Burger/Burger.js';\nimport BuildControl from '../../Burger/BuildControl/BuildControl.js';\nimport Modal from '../../UI/Modal/Modal.js';\nimport OrderSummary from '../../Burger/OrderSummary/OrderSummary.js';\nimport axios from '../../../axios-orders';\nimport Spinner from '../../UI/Spinner/Spinner.js';\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: null,\n      totalPrice: 4,\n      purchasable: false,\n      showModal: false,\n      loading: false\n    };\n\n    this.checkOutHandler = () => {\n      this.setState({\n        showModal: true\n      });\n    };\n\n    this.cancelModal = () => {\n      this.setState({\n        showModal: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      this.setState({\n        loading: true\n      });\n      const order = {\n        ingredients: this.state.ingredients,\n        price: this.state.totalPrice.toFixed(2),\n        customer: {\n          name: \"Wei Jun\",\n          address: {\n            street: '21',\n            blk: '18'\n          },\n          email: 'test.gmail.com'\n        },\n        deliveryMethod: \"fastest\"\n      };\n      axios.post('/orders.json', order).then(response => {\n        this.setState({\n          loading: false,\n          showModal: false\n        });\n      }).catch(error => {\n        this.setState({\n          loading: false,\n          showModal: false\n        });\n      });\n    };\n\n    this.updatePurchaseState = ingredients => {\n      const sum = Object.keys(ingredients).map(igKey => {\n        return ingredients[igKey];\n      }).reduce((sum, next) => {\n        return sum + next;\n      }, 0);\n      this.setState({\n        purchasable: sum > 0\n      });\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n      let updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        ingredients: updatedIngredients,\n        totalPrice: newPrice\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount > 0) {\n        const updatedCount = oldCount - 1;\n        let updatedIngredients = { ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCount;\n        const priceAddition = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice - priceAddition;\n        this.setState({\n          ingredients: updatedIngredients,\n          totalPrice: newPrice\n        });\n        this.updatePurchaseState(updatedIngredients);\n      }\n    };\n  }\n\n  componentDidMount() {\n    axios.get('ingredients.json').then(response => {\n      this.setState({\n        ingredients: response.data\n      });\n    });\n  }\n\n  render() {\n    let orderSummary = null;\n\n    if (this.state.loading) {\n      orderSummary = /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 28\n        }\n      });\n    }\n\n    let burger = /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 22\n      }\n    });\n\n    if (this.state.ingredients) {\n      burger = /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Burger, {\n        ingredients: this.state.ingredients,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(BuildControl, {\n        price: this.state.totalPrice,\n        ingredientAdded: this.addIngredientHandler,\n        ingredientRemoved: this.removeIngredientHandler,\n        purchase: this.state.purchasable,\n        checkOut: this.checkOutHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }\n      }));\n      orderSummary = /*#__PURE__*/React.createElement(OrderSummary, {\n        cancel: this.cancelModal,\n        continue: this.purchaseContinueHandler,\n        price: this.state.totalPrice,\n        ingredients: this.state.ingredients,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      showModal: this.state.showModal,\n      clickBackDrop: this.cancelModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    }, orderSummary), burger);\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["C:/Users/Admin/Documents/ReactTutorial/reacttutorial/src/components/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Burger","BuildControl","Modal","OrderSummary","axios","Spinner","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","Component","state","ingredients","totalPrice","purchasable","showModal","loading","checkOutHandler","setState","cancelModal","purchaseContinueHandler","order","price","toFixed","customer","name","address","street","blk","email","deliveryMethod","post","then","response","catch","error","updatePurchaseState","sum","Object","keys","map","igKey","reduce","next","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","oldPrice","newPrice","removeIngredientHandler","componentDidMount","get","data","render","orderSummary","burger"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Burger from '../../Burger/Burger.js'\r\nimport BuildControl from '../../Burger/BuildControl/BuildControl.js'\r\nimport Modal from '../../UI/Modal/Modal.js'\r\nimport OrderSummary from '../../Burger/OrderSummary/OrderSummary.js'\r\nimport axios from '../../../axios-orders'\r\nimport Spinner from '../../UI/Spinner/Spinner.js'\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n}\r\n\r\nclass BurgerBuilder extends React.Component{\r\n    state = {\r\n        ingredients: null,\r\n        totalPrice: 4,\r\n        purchasable: false,\r\n        showModal: false,\r\n        loading: false\r\n    }\r\n\r\n    componentDidMount () {\r\n        axios.get('ingredients.json').then(response => {\r\n            this.setState({\r\n                ingredients: response.data\r\n            })\r\n        })\r\n        \r\n    }\r\n\r\n    checkOutHandler = () => {\r\n        this.setState({\r\n            showModal: true\r\n        })\r\n            \r\n    }\r\n\r\n    cancelModal = () => {\r\n        this.setState({\r\n            showModal: false\r\n        })\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        this.setState({loading: true})\r\n        const order = {\r\n            ingredients: this.state.ingredients,\r\n            price: this.state.totalPrice.toFixed(2),\r\n            customer: {\r\n                name: \"Wei Jun\",\r\n                address: {\r\n                    street: '21',\r\n                    blk: '18'\r\n                },\r\n                email: 'test.gmail.com'\r\n            },\r\n            deliveryMethod: \"fastest\"\r\n        }\r\n        axios.post('/orders.json', order).then(response => {\r\n            this.setState({loading: false, showModal: false})\r\n        }).catch(error => {\r\n            this.setState({loading: false, showModal: false})\r\n        })\r\n\r\n    }\r\n\r\n    updatePurchaseState = (ingredients) => {\r\n        const sum = Object.keys(ingredients).map(igKey => {\r\n            return ingredients[igKey]\r\n        }).reduce((sum, next) => {\r\n            return sum + next}, 0)\r\n        \r\n        this.setState({\r\n            purchasable: sum > 0\r\n        })\r\n    }\r\n\r\n    addIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type]\r\n        const updatedCount = oldCount + 1\r\n        let updatedIngredients = {\r\n            ...this.state.ingredients\r\n        }\r\n        updatedIngredients[type] = updatedCount\r\n\r\n        const priceAddition = INGREDIENT_PRICES[type]\r\n        const oldPrice = this.state.totalPrice\r\n        const newPrice = oldPrice + priceAddition\r\n\r\n        this.setState({\r\n            ingredients: updatedIngredients,\r\n            totalPrice: newPrice\r\n        })\r\n        this.updatePurchaseState(updatedIngredients)\r\n    }\r\n    \r\n    removeIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type]\r\n        if (oldCount > 0){\r\n            const updatedCount = oldCount - 1\r\n            let updatedIngredients = {\r\n                ...this.state.ingredients\r\n            }\r\n            updatedIngredients[type] = updatedCount\r\n\r\n            const priceAddition = INGREDIENT_PRICES[type]\r\n            const oldPrice = this.state.totalPrice\r\n            const newPrice = oldPrice - priceAddition\r\n            this.setState({\r\n                ingredients: updatedIngredients,\r\n                totalPrice: newPrice\r\n            })\r\n            this.updatePurchaseState(updatedIngredients)\r\n\r\n        }\r\n        \r\n\r\n    }\r\n\r\n    render() {\r\n        let orderSummary = null\r\n        if (this.state.loading){\r\n            orderSummary = <Spinner />\r\n        }\r\n\r\n        let burger = <Spinner />\r\n\r\n        if (this.state.ingredients){\r\n            burger = (\r\n                <React.Fragment>\r\n                    <Burger ingredients = {this.state.ingredients}/>\r\n                    <BuildControl \r\n                        price = {this.state.totalPrice} \r\n                        ingredientAdded={this.addIngredientHandler} \r\n                        ingredientRemoved={this.removeIngredientHandler}\r\n                        purchase = {this.state.purchasable}\r\n                        checkOut = {this.checkOutHandler}/>\r\n                </React.Fragment>\r\n            )\r\n            orderSummary = (\r\n                <OrderSummary cancel = {this.cancelModal}\r\n                              continue = {this.purchaseContinueHandler}\r\n                              price = {this.state.totalPrice}  \r\n                              ingredients = {this.state.ingredients}/>\r\n                              )\r\n            \r\n        }\r\n        return(\r\n            <React.Fragment>\r\n                <Modal showModal = {this.state.showModal}\r\n                        clickBackDrop = {this.cancelModal}>\r\n                   {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nexport default BurgerBuilder"]},"metadata":{},"sourceType":"module"}